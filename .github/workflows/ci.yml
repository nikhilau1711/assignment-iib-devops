# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout the code
      - name: Checkout source
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run Linter
      - name: Lint code with ESLint
        run: npx eslint .

      # Step 5: Run Tests
      - name: Run Tests
        run: |
          echo "Running dummy tests"
          echo "âœ“ Test Passed"

      # Step 6: Set up Docker Buildx (required for GH runners)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 7: Log in to DockerHub (optional)
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build Docker image with timestamp tag (IST)
      - name: Build Docker Image with timestamp tag
        run: |
          TIMESTAMP=$(TZ=Asia/Kolkata date +%Y-%m-%d-%H-%M-%S)
          echo "IMAGE_TAG=$TIMESTAMP" >> $GITHUB_ENV
          #docker build -t ${{ secrets.DOCKER_USERNAME }}/drone-server:$TIMESTAMP .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/drone-server:$TIMESTAMP \
                 -t ${{ secrets.DOCKER_USERNAME }}/drone-server:latest .  
      # Step 9: Push Docker Image (only timestamped tag)
      - name: Push Docker Image with timestamp tag
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/drone-server:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/drone-server:latest
